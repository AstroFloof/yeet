name: Go
on: [push, pull_request]
jobs:

  build:
    name: Build for ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            file: yeet-linux-amd64
            args: --best --lzma
            strip: true
            cgo: 0
          - os: windows-latest
            file: yeet-win-amd64.exe
            args: -9
            strip: false
            cgo: 1
          - os: macos-latest
            file: yeet-osx-amd64
            args: --best
            strip: true
            cgo: 1
    steps:

      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
        id: go

      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get dependencies
        run: go get -v -t -d ./...

      - name: Build
        run: go build -ldflags="-s -w" -v -o ${{ matrix.file }} .
        env:
          CGO_ENABLED: ${{ matrix.cgo }}

      - name: Compress binaries
        uses: svenstaro/upx-action@v2
        with:
          file: ${{ matrix.file }}
          args: ${{ matrix.args }}
          strip: ${{ matrix.strip }}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ${{ matrix.file }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    steps:
      - name: Set up Go
        uses: actions/setup-go@v1
        with:
          go-version: 1.15
        id: go

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 2

      - run: git checkout HEAD^2
        if: ${{ github.event_name == 'pull_request' }}

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: go

      - name: Build
        run: go build -ldflags="-s -w" -v -o yeet .
        env:
          CGO_ENABLED: 0

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1


  push:
    needs: build

    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - uses: actions/checkout@v2

      - name: Build image
        run: docker build . --file Dockerfile --tag yeet

      - name: Log into GitHub Container Registry
        run: echo "${{ secrets.CR_PAT }}" | docker login https://ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image to GitHub Container Registry
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/yeet

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')

          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')

          # Use Docker `latest` tag convention
          [ "$VERSION" == "main" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION

          docker tag yeet $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
